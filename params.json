{"name":"Shgzon.GitHub.io","tagline":"My personal website using GitHub.io.","body":"# Setting up a repository\r\n***\r\n## git init\r\nDe git init commando maakt een nieuwe Git repository aan. Het kan gebruikt worden om een project om te zetten naar een bestaand repository of een lege nieuwe repository. Dit is meestal de eerste commando.\r\n\r\nHet uitvoeren van git init maakt een .git subdirectory aan in de project root, die alle nodige meta data bevat voor de repo. \r\n\r\n### Usage\r\n\r\n`$ git init`\r\n\r\nTransformeer de huidige directory in een Git repository. Hiermee voeg je een .git folder toe aan de huidige directory en dit maakt het mogelijk om herzieningen op te nemen. \r\n\r\n`$ git init <directory>`\r\n\r\nMaak een lege Git repository in een specifieke directory. Zodra je deze commando uitvoert zal dit een nieuwe folder genoemd <directory> aanmaken.\r\n\r\n`$ git init --bare <directory>`\r\n\r\n***\r\n## git clone\r\n\r\nDe git clone commando kopieert een bestaande Git repository. De Git repository wordt hiermee een werkende kopie - het heeft zijn eigen geschiedenis, het beheer van zijn eigen bestanden, en zijn \r\nvolledig geisoleerde omgeving.\r\n\r\nVoor het gemak, automatisch klonen zorgt voor een verbinding wat “origin pointing” genoemd wordt en wijst terug naar de oorsprongelijke repository. \r\n\r\n### Usage\r\n`$ git clone <repo>`\r\n\r\nClone de repository die zich bevindt in <repo> in de folder genoemd <directory>.\r\n\r\n`git clone <repo> <directory>`\r\n\r\n***\r\n## git config\r\n\r\nDe git config commando laat je de Git installatie configureren. De commando bevat alles van gebruikersinformatie tot voorkeuren tot het gedrag van je repository.\r\n\r\n### Usage\r\nDefinieer de naam van de auteur voor alle veranderingen in de huidige repository. Meestal zul je --global flag gebruiken om configuratie opties in te stellen voor de huidige gebruiker.\r\n\r\n`$ git config --global user.name <name>`\r\n\r\nDefinieer de teksteditor gebruikt door commando’s zoals git commit voor de huidige gebruiker. Het <editor> bevat de commando die de editor start.\r\n\r\n`git config --system core.editor <editor>`\r\n`git config --global --edit`\r\n\r\n***\r\n\r\n# Save changes\r\n***\r\n## git add\r\n\r\nDe git add commando voegt een wijziging toe in de bestaande \r\ndirectory in de verzamelplaats. Verandering zijn daadwerkelijk pas doorgevoert als je daarna git commit uitvoert.\r\n\r\nMet betrekking tot deze commando’s, zul je git status ook nodig hebben om de status van de werkende directory en de verzamelplaats te bekijken.\r\n\r\n### Usage\r\n\r\n`git add <file>`\r\n\r\n***\r\n\r\n## git commit\r\n\r\nDe git commit commando commits de snapshot naar de project geschiedenis. Snapshots worden committed naar de local repository, en vereist geen enkele interacite met andere Git repositories.\r\n\r\n### Usage\r\n\r\n`git commit`\r\n\r\nDit zal een texteditor opstarten die je vraagt om een commit bericht. Save het bestand nadat je het bericht hebt ingevuld, en sluit de editor om de daadwerkelijke commit te creeren. \r\n\r\nCommit de staged snapshot, maar in plaats van een texteditor op te laten start kun je <message> gebruiken als een commit bericht.\r\n\r\n`git commit -a`\r\n\r\n***\r\n\r\n","google":"UA-45181570","note":"Don't delete this file! It's used internally to help with page regeneration."}